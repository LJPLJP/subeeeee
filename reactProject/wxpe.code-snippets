{
  //常规组件
  "wxReactPage": {
    "scope": "javascript,typescript",
    "prefix": "wxr_page",
    "body": [
      "import React, { Component } from 'react'",
      "import BasePage from '../common/basePage'",
      "import { connect } from 'react-redux'",
      "import { bindActionCreators } from 'redux'",
      "\n",
      "class ${1:componentName} extends BasePage {",
      "\tconstructor(props) {",
      "\t\tsuper(props)",
      "\t}",
      "\n",
      "\t/**",
      "\t* 获取标题信息",
      "\t*",
      "\t*/",
      "\tgetTitle() {",
      "\t\treturn ''",
      "\t}",
      "\n",
      "\t/**",
      "\t* 第一次渲染结束",
      "\t*",
      "\t*/",
      "\tcomponentDidMount() {",
      " \t// 必须调用父类",
      "\t\tsuper.componentDidMount()",
      "\t}",
      "\n",
      "\t/**",
      "\t* 获取后端数据",
      "\t*",
      "\t*/",
      "\tgetData() {}",
      "\n",
      "\t/**",
      "\t* 组件渲染",
      "\t*",
      "\t*/",
      "\trender() {",
      "\t\treturn <div />",
      "\t}",
      "\n",
      "}",
      "\n",
      "// 设置与当前组件相关的状态树",
      "const mapStateToProps = state => ({})",
      "\n",
      "// 设置与当前组件相关的action",
      "const mapDispatchToProps = dispatch => ({})",
      "\n",
      "// 导出redux增强型组件",
      "export default connect(",
      "\tmapStateToProps,",
      "\tmapDispatchToProps",
      ")(${1:componentName})"
    ],
    "description": "网信私募React页面组件"
  },
  //网络api
  "wxHttpApi": {
    "scope": "javascript,typescript",
    "prefix": "wxr_api",
    "description": "网信私募React网络Api函数",
    "body": [
      "export const $1Api = async ($2) => {",
      "\tconst jsonData = await http_post('$3', {$4})",
      "\treturn jsonData",
      "}"
    ]
  },
  //action
  "wxAction": {
    "scope": "javascript,typescript",
    "prefix": "wxr_action",
    "description": "网信React Action模板",
    "body": [
      "export const action$1 = ($2) => {",
      "\treturn {",
      "\t\ttype: $3,",
      "\t}",
      "}"
    ]
  },

  //net action
  "wxActionNet": {
    "scope": "javascript,typescript",
    "prefix": "wxr_action_net",
    "description": "网信React Action Net模板",
    "body": [
      "export const actionNet$1 = async ($2) => {",
      "\tlet result = await $3",
      "}"
    ]
  },

  "wxReturnAction": {
    "scope": "javascript,typescript",
    "prefix": "wxr_action_return",
    "description": "网信React Action Return模板",
    "body": ["return {", "\ttype: $1,", "\tdata:$2", "}"]
  },

  //action类型
  "wxActionType": {
    "scope": "javascript,typescript",
    "prefix": "wxr_action_type",
    "description": "网信React Action类型定义模板",
    "body": ["export const ACT_$1 = 'act_$2'"]
  },

  //路由类型
  "wxRouteType": {
    "scope": "javascript,typescript",
    "prefix": "wxr_route",
    "description": "网信React route类型定义模板",
    "body": ["export const ROUTE_$1 = '/$2'"]
  },

  //Redux合并
  "wxReduxCombine": {
    "scope": "javascript,typescript",
    "prefix": "wxr_redux_combine",
    "description": "网信React 合并Redux模板",
    "body": [
      "import { combineReducers } from 'redux';",
      "$1",
      "// 合并reducers",
      "export default combineReducers({",
      "",
      "});"
    ]
  },
  //组件Redux
  "wxRedux": {
    "scope": "javascript,typescript",
    "prefix": "wxr_redux",
    "description": "网信React Redux模板",
    "body": [
      "$1",
      "",
      "// 组件状态",
      "const initialState = {",
      "",
      "}",
      "/**",
      " * 组件reducers",
      " *",
      " * @export",
      " * @param {*} [state=initialState]",
      " * @param {*} action",
      " * @returns",
      " */",
      "export default function Reducers(state: any = initialState, action: any) {",
      "\tswitch (action.type) {",
      "\t\tdefault: return state;",
      "\t}",
      "}"
    ]
  },

  //无状态组件
  "wxNoStateC": {
    "scope": "javascript,typescript",
    "prefix": "wxr_no_component",
    "description": "网信React 无状态组件模板",
    "body": ["const $1 = ($2) => {", "\treturn <div>", "", "\t</div>", "}"]
  }
}
